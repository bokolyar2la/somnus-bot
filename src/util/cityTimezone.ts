// src/util/cityTimezone.ts
import { logger } from './logger.js'

/**
 * –ú–∞–ø–ø–∏–Ω–≥ –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ —á–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞
 */
export const CITY_TIMEZONE_MAP: Record<string, string> = {
  // –†–æ—Å—Å–∏—è
  '–º–æ—Å–∫–≤–∞': 'Europe/Moscow',
  'moscow': 'Europe/Moscow',
  '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥': 'Europe/Moscow',
  '—Å–ø–±': 'Europe/Moscow',
  '–ø–µ—Ç–µ—Ä–±—É—Ä–≥': 'Europe/Moscow',
  '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': 'Asia/Yekaterinburg',
  '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': 'Asia/Novosibirsk',
  '–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫': 'Asia/Krasnoyarsk',
  '–∏—Ä–∫—É—Ç—Å–∫': 'Asia/Irkutsk',
  '–≤–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫': 'Asia/Vladivostok',
  '–∫–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥': 'Europe/Kaliningrad',
  '—Å–æ—á–∏': 'Europe/Moscow',
  '–∫–∞–∑–∞–Ω—å': 'Europe/Moscow',
  '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥': 'Europe/Moscow',
  '—á–µ–ª—è–±–∏–Ω—Å–∫': 'Asia/Yekaterinburg',
  '–æ–º—Å–∫': 'Asia/Omsk',
  '—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É': 'Europe/Moscow',
  '—É—Ñ–∞': 'Asia/Yekaterinburg',
  '–≤–æ–ª–≥–æ–≥—Ä–∞–¥': 'Europe/Volgograd',
  '–ø–µ—Ä–º—å': 'Asia/Yekaterinburg',
  '–≤–æ—Ä–æ–Ω–µ–∂': 'Europe/Moscow',
  '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä': 'Europe/Moscow',
  '—Å–∞—Ä–∞—Ç–æ–≤': 'Europe/Saratov',
  '—Ç–æ–ª—å—è—Ç—Ç–∏': 'Europe/Samara',
  '—Å–∞–º–∞—Ä–∞': 'Europe/Samara',
  
  // –°–ù–ì
  '—Ç–±–∏–ª–∏—Å–∏': 'Asia/Tbilisi',
  '–±–∞—Ç—É–º–∏': 'Asia/Tbilisi',
  '–µ—Ä–µ–≤–∞–Ω': 'Asia/Yerevan',
  '–±–∞–∫—É': 'Asia/Baku',
  '–∫–∏–µ–≤': 'Europe/Kiev',
  '—Ö–∞—Ä—å–∫–æ–≤': 'Europe/Kiev',
  '–æ–¥–µ—Å—Å–∞': 'Europe/Kiev',
  '–¥–Ω–µ–ø—Ä': 'Europe/Kiev',
  '–ª—å–≤–æ–≤': 'Europe/Kiev',
  '–º–∏–Ω—Å–∫': 'Europe/Minsk',
  '–∞–ª–º–∞—Ç—ã': 'Asia/Almaty',
  '–∞—Å—Ç–∞–Ω–∞': 'Asia/Almaty',
  '–Ω—É—Ä-—Å—É–ª—Ç–∞–Ω': 'Asia/Almaty',
  '—Ç–∞—à–∫–µ–Ω—Ç': 'Asia/Tashkent',
  '–±–∏—à–∫–µ–∫': 'Asia/Bishkek',
  '–¥—É—à–∞–Ω–±–µ': 'Asia/Dushanbe',
  '–∞—à—Ö–∞–±–∞–¥': 'Asia/Ashgabat',
  '–∫–∏—à–∏–Ω–µ–≤': 'Europe/Chisinau',
  
  // –ï–≤—Ä–æ–ø–∞
  '–±–µ—Ä–ª–∏–Ω': 'Europe/Berlin',
  '–º—é–Ω—Ö–µ–Ω': 'Europe/Berlin',
  '–≥–∞–º–±—É—Ä–≥': 'Europe/Berlin',
  '–ª–æ–Ω–¥–æ–Ω': 'Europe/London',
  '–º–∞–Ω—á–µ—Å—Ç–µ—Ä': 'Europe/London',
  '–ø–∞—Ä–∏–∂': 'Europe/Paris',
  '–º–∞—Ä—Å–µ–ª—å': 'Europe/Paris',
  '—Ä–∏–º': 'Europe/Rome',
  '–º–∏–ª–∞–Ω': 'Europe/Rome',
  '–º–∞–¥—Ä–∏–¥': 'Europe/Madrid',
  '–±–∞—Ä—Å–µ–ª–æ–Ω–∞': 'Europe/Madrid',
  '–∞–º—Å—Ç–µ—Ä–¥–∞–º': 'Europe/Amsterdam',
  '–ø—Ä–∞–≥–∞': 'Europe/Prague',
  '–≤–∞—Ä—à–∞–≤–∞': 'Europe/Warsaw',
  '–±—É–¥–∞–ø–µ—à—Ç': 'Europe/Budapest',
  '–≤–µ–Ω–∞': 'Europe/Vienna',
  '—Å—Ç–æ–∫–≥–æ–ª—å–º': 'Europe/Stockholm',
  '—Ö–µ–ª—å—Å–∏–Ω–∫–∏': 'Europe/Helsinki',
  '–æ—Å–ª–æ': 'Europe/Oslo',
  '–∫–æ–ø–µ–Ω–≥–∞–≥–µ–Ω': 'Europe/Copenhagen',
  '–∞—Ñ–∏–Ω—ã': 'Europe/Athens',
  '—Å—Ç–∞–º–±—É–ª': 'Europe/Istanbul',
  
  // –°–®–ê –∏ –ö–∞–Ω–∞–¥–∞
  '–Ω—å—é-–π–æ—Ä–∫': 'America/New_York',
  '–≤–∞—à–∏–Ω–≥—Ç–æ–Ω': 'America/New_York',
  '–±–æ—Å—Ç–æ–Ω': 'America/New_York',
  '–º–∞–π–∞–º–∏': 'America/New_York',
  '—á–∏–∫–∞–≥–æ': 'America/Chicago',
  '–¥–∞–ª–ª–∞—Å': 'America/Chicago',
  '—Ö—å—é—Å—Ç–æ–Ω': 'America/Chicago',
  '–¥–µ–Ω–≤–µ—Ä': 'America/Denver',
  '–ª–æ—Å-–∞–Ω–¥–∂–µ–ª–µ—Å': 'America/Los_Angeles',
  '—Å–∞–Ω-—Ñ—Ä–∞–Ω—Ü–∏—Å–∫–æ': 'America/Los_Angeles',
  '—Å–∏—ç—Ç–ª': 'America/Los_Angeles',
  '–ª–∞—Å-–≤–µ–≥–∞—Å': 'America/Los_Angeles',
  '—Ç–æ—Ä–æ–Ω—Ç–æ': 'America/Toronto',
  '–≤–∞–Ω–∫—É–≤–µ—Ä': 'America/Vancouver',
  '–º–æ–Ω—Ä–µ–∞–ª—å': 'America/Montreal',
  
  // –ê–∑–∏—è
  '—Ç–æ–∫–∏–æ': 'Asia/Tokyo',
  '–æ—Å–∞–∫–∞': 'Asia/Tokyo',
  '–ø–µ–∫–∏–Ω': 'Asia/Shanghai',
  '—à–∞–Ω—Ö–∞–π': 'Asia/Shanghai',
  '–≥–æ–Ω–∫–æ–Ω–≥': 'Asia/Hong_Kong',
  '—Å–∏–Ω–≥–∞–ø—É—Ä': 'Asia/Singapore',
  '–±–∞–Ω–≥–∫–æ–∫': 'Asia/Bangkok',
  '–¥–∂–∞–∫–∞—Ä—Ç–∞': 'Asia/Jakarta',
  '–º–∞–Ω–∏–ª–∞': 'Asia/Manila',
  '—Å–µ—É–ª': 'Asia/Seoul',
  '–º—É–º–±–∞–∏': 'Asia/Kolkata',
  '–¥–µ–ª–∏': 'Asia/Kolkata',
  '–±–∞–Ω–≥–∞–ª–æ—Ä': 'Asia/Kolkata',
  '–¥—É–±–∞–π': 'Asia/Dubai',
  '—Ç–µ–ª—å-–∞–≤–∏–≤': 'Asia/Jerusalem',
  
  // –ê–≤—Å—Ç—Ä–∞–ª–∏—è –∏ –û–∫–µ–∞–Ω–∏—è
  '—Å–∏–¥–Ω–µ–π': 'Australia/Sydney',
  '–º–µ–ª—å–±—É—Ä–Ω': 'Australia/Melbourne',
  '–ø–µ—Ä—Ç': 'Australia/Perth',
  '–æ–∫–ª–µ–Ω–¥': 'Pacific/Auckland',
  
  // –Æ–∂–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞
  '—Å–∞–Ω-–ø–∞—É–ª—É': 'America/Sao_Paulo',
  '—Ä–∏–æ-–¥–µ-–∂–∞–Ω–µ–π—Ä–æ': 'America/Sao_Paulo',
  '–±—É—ç–Ω–æ—Å-–∞–π—Ä–µ—Å': 'America/Argentina/Buenos_Aires',
  '–ª–∏–º–∞': 'America/Lima',
  '–±–æ–≥–æ—Ç–∞': 'America/Bogota',
  '–∫–∞—Ä–∞–∫–∞—Å': 'America/Caracas',
  
  // –ê—Ñ—Ä–∏–∫–∞
  '–∫–∞–∏—Ä': 'Africa/Cairo',
  '–∫–µ–π–ø—Ç–∞—É–Ω': 'Africa/Johannesburg',
  '–π–æ—Ö–∞–Ω–Ω–µ—Å–±—É—Ä–≥': 'Africa/Johannesburg',
  '–ª–∞–≥–æ—Å': 'Africa/Lagos',
  '–∫–∞—Å–∞–±–ª–∞–Ω–∫–∞': 'Africa/Casablanca'
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≥–æ—Ä–æ–¥–∞
 */
export function getTimezoneByCity(cityName: string): string | null {
  const normalizedCity = cityName.toLowerCase().trim()
  
  // –ü—Ä—è–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  if (CITY_TIMEZONE_MAP[normalizedCity]) {
    return CITY_TIMEZONE_MAP[normalizedCity]
  }
  
  // –ü–æ–∏—Å–∫ —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
  for (const [city, timezone] of Object.entries(CITY_TIMEZONE_MAP)) {
    if (city.includes(normalizedCity) || normalizedCity.includes(city)) {
      return timezone
    }
  }
  
  return null
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
 */
export function getPopularCities(): Array<{ name: string; timezone: string }> {
  return [
    { name: 'üá∑üá∫ –ú–æ—Å–∫–≤–∞', timezone: 'Europe/Moscow' },
    { name: 'üá∑üá∫ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', timezone: 'Europe/Moscow' },
    { name: 'üá¨üá™ –¢–±–∏–ª–∏—Å–∏', timezone: 'Asia/Tbilisi' },
    { name: 'üá∑üá∫ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', timezone: 'Asia/Yekaterinburg' },
    { name: 'üá∑üá∫ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', timezone: 'Asia/Novosibirsk' },
    { name: 'üá∞üáø –ê–ª–º–∞—Ç—ã', timezone: 'Asia/Almaty' },
    { name: 'üá∫üá¶ –ö–∏–µ–≤', timezone: 'Europe/Kiev' },
    { name: 'üáßüáæ –ú–∏–Ω—Å–∫', timezone: 'Europe/Minsk' },
    { name: 'üá©üá™ –ë–µ—Ä–ª–∏–Ω', timezone: 'Europe/Berlin' },
    { name: 'üá¨üáß –õ–æ–Ω–¥–æ–Ω', timezone: 'Europe/London' },
    { name: 'üá∫üá∏ –ù—å—é-–ô–æ—Ä–∫', timezone: 'America/New_York' },
    { name: 'üá∫üá∏ –õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å', timezone: 'America/Los_Angeles' },
    { name: 'üáØüáµ –¢–æ–∫–∏–æ', timezone: 'Asia/Tokyo' },
    { name: 'üá®üá≥ –ü–µ–∫–∏–Ω', timezone: 'Asia/Shanghai' },
    { name: 'üá¶üá™ –î—É–±–∞–π', timezone: 'Asia/Dubai' },
    { name: 'üá¶üá∫ –°–∏–¥–Ω–µ–π', timezone: 'Australia/Sydney' }
  ]
}

/**
 * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
 */
export function validateTimezone(timezone: string): boolean {
  try {
    Intl.DateTimeFormat(undefined, { timeZone: timezone })
    return true
  } catch {
    return false
  }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 */
export function formatTimeInTimezone(timezone: string): string {
  try {
    const now = new Date()
    const formatter = new Intl.DateTimeFormat('ru-RU', {
      timeZone: timezone,
      hour: '2-digit',
      minute: '2-digit',
      day: '2-digit',
      month: '2-digit',
      year: 'numeric'
    })
    return formatter.format(now)
  } catch (error) {
    logger.error({ error, timezone }, 'Failed to format time in timezone')
    return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
  }
}
